'''
5-05 - 试举例说明有些应用程序愿意采用不可靠的UDP，而不愿意采用可靠的TCP。 
    1. 实时数据：比如QQ聊天、视频播放平台哔哩哔哩等。在互联网上传输实时数据的分组时，有可能会出现差错甚至丢失。如果利用TCP协议对这些出错或丢失的分组进行重传，那么时延就会大大增加。因此，实时数据的传输在运输层就应采用用户数据报UDP协议。这就是意味着，对于实时数据的传输，我们宁可丢失少量分组，也不要等待太晚到达的分组。在连续的音频和视频数据流中，很少量的分组丢失对播放效果的影响不大，因而是可以容忍的。另外，当网络出现拥塞时，TCP的拥塞控制就会让TCP的发送方放慢报文段的发送。可能有的应用程序就不愿意放慢其报文段的发送速度。其次，可能有的应用程序不需要TCP的可靠传输，在上面这些情况下，就宁可使用UDP来传送。

5-08 - 为什么说UDP是面向报文的，而TCP是面向字节流的？
    1. UDP是面向报文的：发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付IP层。UDP对用用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界。这意味着，应用层交给UDP多长的报文，UDP就照样发送，即一次发送一整个报文。所以说UDP是面向报文传输的。TCP是面向字节流：TCP中的“流”指的是流入到进程或从进程流出的字节序列。虽然应用程序和TCP的交互是一次一个数据块（大小不等），但是TCP把应用程序交下来的数据仅仅看成是一连串的无结构的字节流。

5-09 - 端口的作用是什么？为什么端口号要划分为三种？
    1. 端口的作用就是对TCP/IP体系的应用进程进行统一的标志，使运行在不同操作系统的计算机的应用进程能够互相通信。
    2. 避免端口号重复，无法区分应用进程。二是因特网上的计算机通信都是采用C/S方式，在客户发起通信请求时，必须知道服务器的端口，对于一些主要的应用程序，必须让所有用户知道。

5-18 - 假定在运输层使用停止等待协议。发送方发送报文段M0后在设定的时间内未收到确认，于是重传M0,但M0又迟迟不能到达接收方。不久，发送方收到了迟到的对M0的确认，于是发送下一个报文段M1,不久就收到了对M1的确认。接着发送方发送新的报文段M0,但这个新的M0在传送的过程中丢失了。正巧，一开始就滞留在网络中的M0现在到达接收方。接收方无法分辨M0是旧的。于是收下M0,并发送确认。显然，接收方后来收到的M0是重复的，协议失败了。试画出类似于图5-9所示的双方交换报文段的过程。
    1. Pass https://blog.csdn.net/qq_56919740/article/details/129649988?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171796243716800182742774%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=171796243716800182742774&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-129649988-null-null.142^v100^pc_search_result_base7&utm_term=%E8%AE%A1%E7%BD%91%E7%AC%AC%E4%BA%94%E7%AB%A0%E8%AF%BE%E5%90%8E%E9%A2%98%E7%AD%94%E6%A1%88&spm=1018.2226.3001.4187

5-24 - 一个TCP连接下面使用256kbit/s的链路，其端到端时延为128ms。经测试，发现吞吐量只有120 kbit/s。试问发送窗口W是多少？（提示：可以有两种答案，取决于接收端发出确认的时机）
    1. Pass https://blog.csdn.net/qq_56919740/article/details/129649988?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171796243716800182742774%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=171796243716800182742774&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-129649988-null-null.142^v100^pc_search_result_base7&utm_term=%E8%AE%A1%E7%BD%91%E7%AC%AC%E4%BA%94%E7%AB%A0%E8%AF%BE%E5%90%8E%E9%A2%98%E7%AD%94%E6%A1%88&spm=1018.2226.3001.4187

5-71 - 5.5 节中指出：例如，若用 2.5 Gbit/s 速率发送报文段，则不到 14 秒钟序号就会重复。请计算验证这句话。
    1. 2.5Gbit/s的速率，那么每秒就可以发送0.3125× 1 0 9 10^9 109个字节，一共有 2 32 2^{32} 232个序号， 2 32 2^{32} 232/0.3125× 1 0 9 10^9 109=13.74S。所以这不到14秒，TCP序号就会发生绕回。
'''